Ahora no estoy de acuerdo con ese tipo de cosa que creo que El estado de un lenguaje de programación. no debe depender en donde opera en relación con el procesador Creo que debería ser declarado basado en Que hace dado el hecho de que PHP puede manejar Clases y todo eso cosas OOP y todas las cosas que lo haríamos esperar de una programación decente idioma Llamaría a PHP un lenguaje de programación. Ahora hay un nivel aún más alto y Yo diría que los marcos ocupar ese nivel, por ejemplo, esto es Código típico que podría ver en un PHP Cosas del marco como um Obtención de una identificación del tercer segmento de una URL o obteniendo la URL anterior o tal vez Obtención de datos de flash o configuración de datos flash o algo así Ahora, seguro que este es el código PHP que es para seguro sin embargo ¿Qué ha pasado cuando ves este tipo? de la cosa es que alguien ha tomado una tarea como conseguir Conoces un personaje de la URL y lo han simplificado y en algún nivel el marco lo hará convertir estas cosas en tal vez tres cuatro o cinco líneas de código php De todos modos no te sorprenderás Aprende que cuanto más arriba Vamos a los más lentos todo se convierte en y lo más bajo vamos a medida que avanzamos hacia el procesador Entonces, de repente, todo comienza a conseguir. más y más rápido Ahora este nivel aquí es absolutamente. crítico Esto es lo que llamaría la zona segura. Si puedes construir algo y tenerlo. Ocupar este espacio Entonces felicidades has construido un pura sangre lenguaje de programación y esto es un punto dulce que es bastante universalmente respetado a través de la academia el desarrollo web Programadores de la industria y todo tipo. El desafío está construyendo algo que ocupa este espacio es un edificio asombrosamente difícil algo como PHP, que es un camino hacia arriba aquí es muy muy difícil pero es probable que sea realizable Hay gente viendo este video. probablemente muchos de ustedes ¿Quién podría intentar algo así? y tener un tiro razonable en ello Pero aquí aquí la zona segura es esta es verdaderamente Un lugar muy difícil para alcanzar ahora. Hay algo sobre esto Imagen de la mente que no está enteramente. preciso ves que hay una pequeña tecnología aquí eso hizo algo bastante notable un Número de años de vuelta y eso es javascript porque para un largo tiempo Javascript fue este pequeño Mickey Mouse Lenguaje de escritura Era algo que las personas que hicieron. Navegadores con complemento Como una especie de pensamiento, pero fue considerado solo un lenguaje de scripting no fue muy rápido no fue muy útil en realidad para los más parte Pero luego en 2008 Google creó el v8 javascript motor esto era algo bastante notable porque lo que hizo esto se tomó JavaScript de este nivel aquí arriba A este nivel aquí esto es Absolutamente asombroso y no estoy al tanto. de esto sucediendo alguna vez en la historia de Nuestra industria Porque lo que esto significaba es que ahora Javascript había cambiado de ser un pequeño mouse de Mickey Scripting Language para ser un lenguaje de programación de pura sangre ocupando el mismo espacio que se apoderó C-Plus Plus Fortran y otros Tan pronto como salió el motor V8. repentinamente Todo el mundo sabía de qué manera era el viento. Soplando estaba claro que JavaScript era ahora listo para hacerse cargo del mundo Y de la nada tuvimos una explosión. de las tecnologías de JavaScript y Frameworks Cosas como Embar, por supuesto, nodo.js, angular reacciona Y todo el resto ahora. Sobre JavaScript es que JavaScript utiliza un estuche de camello o en menos Añadir al carrito Los desarrolladores de JavaScript tienden para usar el estuche de camello que es donde están Cómodo bien Sin embargo, antes de que digas bien, vamos a todos Escribe código que parece Javascript, que es mucha gente. están haciendo actualmente es posible que desee pausar por un momento porque el caso de camello tiene Ambigüedad, por ejemplo, aquí hay un poco. JavaScript que podría haber visto obtener elemento por id, bien, ahora mira la identificación allí Podrías haberlo hecho eso, pero lo creas. o no eso causaría un Error y luego, por otro lado, hemos tengo código como este que vemos en JavaScript bastante, así que esta El negocio de casos de camello deja un montón de habitación Para la ambigüedad si tuviéramos que usar serpiente. caso Entonces creo que los errores se convierten. Mucho menos probable y creo que serpiente El caso es más robusto En última instancia, tienes una elección Si quieres escribir código como un desarrollador de javascript Use el caso de camello sin embargo Si quieres escribir código que se vea. como c Y es más robusto, use la funda de serpiente. En definitiva, aunque el que te gusta. Lo mejor es el ganador y, por eso, por eso yo Siempre digo usar lo que te hace Siéntete bien, te veré en el siguiente video. Inglés (generados automáticamente)